#ifndef LOGGER_H
#define LOGGER_H

/*! \file logger.h
    \brief Объявление класса-одиночки протоколирования ошибок и предупреждений.
*/

#include <QIODevice>
#include <QTextStream>

//! Класс-одиночка для протоколирования ошибок и придупреждений в log-файл.
/*!
  Класс построен на основе шаблона Одиночка (Singleton), что обеспечивает
  доступ к одному и тому же потоку вывода ошибок из любой части программы.
  предназначен для использования в Qt коде. Поток вывода основан на классе QIODevice.
*/

class SLogger {
public:
    //! Статическая функция для доступа к экземпляру одиночки.
    /*!
      Возвращает указатель на экземпляр класса одиночки. Если экземпляра не существует,
      то он создается.
    */
    static SLogger *instance() {
        if(!inst) inst = new SLogger;
        return inst;
    }

    //! Функция назначения устройства вывода.
    /*!
      Устанавливает устройство вывода для члена-данного stream.
    */
    void setDevice(QIODevice *);

    //! Функция доступа к потоку вывода.
    /*!
      Возвращает ссылку на поток вывода. Позволяет выводить сообщения в log-файл с
      помощью оператора '<<'.
    */
    QTextStream &log();
protected:
    //! Защищенный конструктор.
    /*!
      Конструктор защищен для предотвращения создания экземляра способом отличным от
      использования статической функции instance().
    */
    SLogger() {}

    //! Защищенный копирующий конструктор.
    /*!
      Конструктор защищен для предотвращения создания экземляра способом отличным от
      использования статической функции instance().
    */
    SLogger(const SLogger &) {}

private:
    QTextStream stream;     /*!< поток вывода ошибок. */
    static SLogger *inst;   /*!< указатель на единственный экземпляр класса.*/
};

#endif // LOGGER_H
